name: Build torch-cublas-hgemm Windows cp312 cu128

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-windows-wheel:
    runs-on: windows-2022
    timeout-minutes: 240

    steps:
      - name: Checkout aredden/torch-cublas-hgemm into job root
        uses: actions/checkout@v4
        with:
          repository: aredden/torch-cublas-hgemm
          path: .
          fetch-depth: 0

      - name: Confirm repo files present (debug)
        run: |
          echo "=== CWD ==="
          powershell -Command "Get-Location"
          echo "=== top-level listing ==="
          dir
          echo "=== show setup.py ==="
          type setup.py || echo "setup.py not found"

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Ensure pip tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel ninja

      - name: Install CUDA 12.8 toolkit (silent) and set CUDA_HOME
        shell: pwsh
        run: |
          $installerUrl = 'https://developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda_12.8.0_windows_network.exe'
          $out = 'C:\windows\temp\cuda_12.8.exe'
          Write-Host "Downloading CUDA installer..."
          Invoke-WebRequest -Uri $installerUrl -OutFile $out -UseBasicParsing
          Write-Host "Running CUDA installer (silent)..."
          Start-Process -FilePath $out -ArgumentList '-s' -Wait
          # common install path
          $cudaRoot = 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8'
          if (Test-Path $cudaRoot) {
            Write-Host "CUDA found at $cudaRoot"
            [Environment]::SetEnvironmentVariable('CUDA_HOME', $cudaRoot, 'Process')
            $newPath = $env:PATH + ';' + (Join-Path $cudaRoot 'bin') + ';' + (Join-Path $cudaRoot 'lib\x64')
            [Environment]::SetEnvironmentVariable('PATH', $newPath, 'Process')
          } else {
            Write-Host "CUDA installer did not produce expected folder $cudaRoot. Will continue; setup.py may still find headers via torch's CUDA or fail."
          }
          Write-Host "nvcc check:"
          nvcc --version || Write-Host "nvcc not found"

      - name: Debug CUDA environment (details)
        shell: pwsh
        run: |
          echo "CUDA_HOME=$env:CUDA_HOME"
          echo "PATH snippet:"
          echo $env:PATH | Select-String -Pattern "CUDA" -AllMatches || true
          echo "Check candidate CUDA locations:"
          $candidates = @('C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8','C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA')
          foreach ($p in $candidates) {
            if (Test-Path $p) { Write-Host "Found: $p"; Get-ChildItem -Path (Join-Path $p 'include') -ErrorAction SilentlyContinue | Select-Object Name | Out-String -Width 4096; Get-ChildItem -Path (Join-Path $p 'lib\x64') -ErrorAction SilentlyContinue | Select-Object Name | Out-String -Width 4096 } else { Write-Host "Not found: $p" }
          }

      - name: Install PyTorch for CUDA 12.8
        run: |
          python -m pip install --extra-index-url https://download.pytorch.org/whl/cu128 torch --upgrade

      - name: Install build deps
        run: |
          python -m pip install --upgrade cmake

      - name: Show repo tree (debug)
        run: |
          echo "=== recursive tree for repo (first 300 lines) ==="
          powershell -Command "Get-ChildItem -Recurse -Force . | Select-Object FullName,Length | Out-String -Width 4096" | Select-String -Pattern "."

      - name: Build wheel from repo root (verbose)
        run: |
          echo "Running in:" && powershell -Command "Get-Location"
          echo "Files to build:" && powershell -Command "Get-ChildItem -Force | Select-Object Name | Out-String -Width 4096"
          python -m pip wheel . --no-deps -w ./wheelhouse --verbose 2>&1 | tee pip_wheel_build.log
          echo "==== last 200 lines of pip build log ===="
          powershell -Command "Get-Content pip_wheel_build.log -Tail 200" || true

      - name: Show produced wheels
        run: |
          echo "=== wheelhouse listing ==="
          dir .\wheelhouse || echo "no wheelhouse"

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl
